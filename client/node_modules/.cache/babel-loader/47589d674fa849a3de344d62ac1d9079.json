{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SACAC,uBADA,EAEAC,uBAFA,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAQC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAR;;AACG,MAAG;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACC,GALD,CAKE,OAAMC,KAAN,EAAa;AAClB,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACC;AAGF,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,UAAU,CACZG,eAAe,CAACgB,uBADJ,EAEZX,qBAFY,CAAhB;AAIH","sourcesContent":["import {takeLatest, call, put} from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {\r\nfetchCollectionsSuccess,\r\nfetchCollectionsFailure\r\n} from './shop.action';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n yield   console.log('I am fired');\r\n    try{\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap))\r\n    } catch(error) {\r\n yield put(fetchCollectionsFailure(error.message));\r\n}\r\n }\r\n\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}