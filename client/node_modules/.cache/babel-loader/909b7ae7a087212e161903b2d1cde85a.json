{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionType from './user.types';\nimport { auth, googleProvider, dateUtilizator, getUtilizatorCurent } from '../../firebase/firebase.utils';\nimport { signInSucces, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(dateUtilizator, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSucces({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAtuhenticated() {\n  try {\n    const userAuth = yield getUtilizatorCurent();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionType.CHECK_USER_SESSION, isUserAtuhenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionType.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionType.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionType.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAtuhenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionType","auth","googleProvider","dateUtilizator","getUtilizatorCurent","signInSucces","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAtuhenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport UserActionType from './user.types';\r\nimport {auth, googleProvider , dateUtilizator, getUtilizatorCurent} from '../../firebase/firebase.utils'\r\nimport { signInSucces, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess} from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\r\n    try{\r\n    const userRef = yield call(dateUtilizator, userAuth, additionalData);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSucces({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n} catch(error){\r\n    yield put(signInFailure(error));\r\n}\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n      const { user } = yield auth.signInWithPopup(googleProvider);\r\n      yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n  \r\n  export function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n      yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n  export function* isUserAtuhenticated(){\r\n    try{\r\n        const userAuth = yield getUtilizatorCurent();\r\n        if(!userAuth) return ;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n  }\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n      yield auth.signOut();\r\n      yield put(signOutSuccess());\r\n    } catch (error) {\r\n      yield put(signOutFailure(error));\r\n    }\r\n  }\r\n  export function* signUp({ payload: { email, password, displayName } }) {\r\n    try {\r\n      const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n      yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n    } catch (error) {\r\n      yield put(signUpFailure(error));\r\n    }\r\n  }\r\nexport function* signInAfterSignUp({payload: {user, additionalData}}){\r\n   yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionType.CHECK_USER_SESSION,isUserAtuhenticated )\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionType.SIGN_OUT_START,signOut)\r\n}\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionType.SIGN_UP_START, signUp)\r\n}\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(UserActionType.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n  }\r\n  \r\nexport function* userSagas(){\r\n    yield all([\r\n         call(onGoogleSignInStart),\r\n         call(onEmailSignInStart), \r\n         call(isUserAtuhenticated),\r\n         call(onSignOutStart),\r\n         call(onSignUpStart),\r\n         call(onSignUpSuccess)\r\n\r\n        ])\r\n}"]},"metadata":{},"sourceType":"module"}