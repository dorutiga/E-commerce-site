{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dorut Iuga\\\\Desktop\\\\REACT\\\\e-commerce\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.style.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //import { auth } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleChange = async event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        required: true,\n        label: \"email\",\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        required: true,\n        label: \"password\",\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"  Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \" Sign in with Google \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"+l2HUmZ2UeB66C0/VBs2wdL2KOE=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","useState","SignIn","userCredentials","setCredentials","email","password","handleChange","event","value","name","target","handleSubmit","preventDefault","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.style.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n//import { auth } from '../../firebase/firebase.utils';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst SignIn =({ emailSignInStart, googleSignInStart }) => {\r\n\r\nconst [userCredentials, setCredentials] = useState({email : '', password: ''})\r\nconst { email, password } = userCredentials;\r\n        const   handleChange = async event =>{\r\n                const {value, name } = event.target ;\r\n                setCredentials({ ...userCredentials, [name]: value})\r\n\r\n            };\r\n   \r\n      const   handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n      };\r\n      \r\n   \r\n        return (\r\n            <div className = 'sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit = {handleSubmit}>\r\n                    <FormInput name = 'email' \r\n                    type='email' \r\n                    value = {this.state.email} \r\n                    required\r\n                    label = \"email\"\r\n                    handleChange ={handleChange}\r\n                    />\r\n\r\n                 \r\n                    <FormInput name = 'password'\r\n                     type='password' \r\n                     value = {this.state.password} \r\n                     required\r\n                     label = \"password\"\r\n                     handleChange ={this.handleChange}/>\r\n                    \r\n                    <div className='buttons'>\r\n                    <CustomButton type=\"submit\" >  Sign In</CustomButton>\r\n                    <CustomButton type ='button' onClick={ googleSignInStart } isGoogleSignIn> Sign in with Google </CustomButton>\r\n                    </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\ngoogleSignInStart: () => dispatch(googleSignInStart()),\r\nemailSignInStart : (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}