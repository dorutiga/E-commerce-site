{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dorut Iuga\\\\Desktop\\\\REACT\\\\e-commerce\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.style.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart, isGoogleSignInStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      const {\n        email,\n        password\n      } = this.state;\n      event.preventDefault();\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n        alert(\"email or password is incorrect\");\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      isGoogleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          required: true,\n          label: \"email\",\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          required: true,\n          label: \"password\",\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"  Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: isGoogleSignInStart,\n            isGoogleSignIn: true,\n            children: \" Sign in with Google \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  isGoogleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","isGoogleSignInStart","SignIn","Component","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","email","password","state","preventDefault","signInWithEmailAndPassword","error","console","log","alert","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.style.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth ,signInWithGoogle } from '../../firebase/firebase.utils';\r\nimport {googleSignInStart, isGoogleSignInStart} from '../../redux/user/user.actions';\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state ={\r\n            email: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    handleChange = async event =>{\r\n        const {value, name } = event.target ;\r\n        this.setState({[name]: value})\r\n       \r\n\r\n    }\r\n    handleSubmit = async event =>{\r\n        const {email, password} =this.state ;\r\n        event.preventDefault();\r\n        try{\r\nawait auth.signInWithEmailAndPassword(email, password);\r\n this.setState({email: '' ,password: ''})\r\n        } catch(error) {\r\n            console.log(error);\r\n            alert(\"email or password is incorrect\");\r\n        }\r\n       \r\n    }\r\n    render(){\r\n        const {isGoogleSignInStart}= this.props;\r\n        return (\r\n            <div className = 'sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <FormInput name = 'email' \r\n                    type='email' \r\n                    value = {this.state.email} \r\n                    required\r\n                    label = \"email\"\r\n                    handleChange ={this.handleChange}\r\n                    />\r\n\r\n                 \r\n                    <FormInput name = 'password'\r\n                     type='password' \r\n                     value = {this.state.password} \r\n                     required\r\n                     label = \"password\"\r\n                     handleChange ={this.handleChange}/>\r\n                    \r\n                    <div className='buttons'>\r\n                    <CustomButton type=\"submit\" >  Sign In</CustomButton>\r\n                    <CustomButton onClick={ isGoogleSignInStart } isGoogleSignIn> Sign in with Google </CustomButton>\r\n                    </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\nisGoogleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}