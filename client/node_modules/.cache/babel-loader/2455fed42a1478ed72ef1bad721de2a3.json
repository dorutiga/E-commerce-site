{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","catch","error","fetchCollectionsFailure","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAAQC,SAAR,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAN,CAA9B;AAMP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAI;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAGF;AAF6C,CAAJ,CAA7C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAI;AAClDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD4B;AAElDH,EAAAA,OAAO,EAAEE;AAFyC,CAAJ,CAA3C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAK;AAC3C,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAECY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AACpC,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACRL,MAAAA,QAAQ,CAAER,uBAAuB,CAACc,cAAD,CAAzB,CAAR;AAEA,KAJQ,EAINC,KAJM,CAIAC,KAAK,IAAIR,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAJjB;AAKR,GATG;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport {firestore , convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nexport const fetchCollectionsStart = () =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n   \r\n})\r\n\r\n\r\nexport const fetchCollectionsSuccess = collectionMap =>({\r\n type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n payload : collectionMap\r\n});\r\n\r\nexport const fetchCollectionFailure = errorMessage =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () =>{\r\n    return dispatch =>{\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n         collectionRef.get().then(snapshot =>{\r\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n dispatch( fetchCollectionsSuccess(collectionsMap));\r\n \r\n}).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}