{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dorut Iuga\\\\Desktop\\\\REACT\\\\e-commerce\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.style.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //import { auth } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      isGoogleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          required: true,\n          label: \"email\",\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          required: true,\n          label: \"password\",\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"  Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: isGoogleSignInStart,\n            isGoogleSignIn: true,\n            children: \" Sign in with Google \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  isGoogleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","email","password","state","render","isGoogleSignInStart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.style.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n//import { auth } from '../../firebase/firebase.utils';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state ={\r\n            email: '',\r\n            password: ''\r\n        }\r\n        \r\n    }\r\n    handleChange = async event =>{\r\n        const {value, name } = event.target ;\r\n        this.setState({[name]: value})\r\n       \r\n\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n    \r\n        emailSignInStart(email, password);\r\n      };\r\n    render(){\r\n        const {isGoogleSignInStart}= this.props;\r\n        return (\r\n            <div className = 'sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <FormInput name = 'email' \r\n                    type='email' \r\n                    value = {this.state.email} \r\n                    required\r\n                    label = \"email\"\r\n                    handleChange ={this.handleChange}\r\n                    />\r\n\r\n                 \r\n                    <FormInput name = 'password'\r\n                     type='password' \r\n                     value = {this.state.password} \r\n                     required\r\n                     label = \"password\"\r\n                     handleChange ={this.handleChange}/>\r\n                    \r\n                    <div className='buttons'>\r\n                    <CustomButton type=\"submit\" >  Sign In</CustomButton>\r\n                    <CustomButton type ='button' onClick={ isGoogleSignInStart } isGoogleSignIn> Sign in with Google </CustomButton>\r\n                    </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\nisGoogleSignInStart: () => dispatch(googleSignInStart()),\r\nemailSignInStart : (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}