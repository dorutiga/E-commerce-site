{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionType from './user.types';\nimport { auth, googleProvider, dateUtilizator } from '../../firebase/firebase.utils';\nimport { signInSucces, signInFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(dateUtilizator, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSucces({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionType","auth","googleProvider","dateUtilizator","signInSucces","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA+BC,cAA/B,QAAoD,+BAApD;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAG;AACH,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,cAAD,EAAiBI,QAAjB,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,YAAY,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAb,CAAT;AACH,GAJG,CAIF,OAAMC,KAAN,EAAY;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACA;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AACH,OAAO,UAAUS,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,cAAc,CAACuB,oBAAhB,EAAsCT,gBAAtC,CAAhB;AACH;AAMD,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,cAAc,CAACyB,mBAAhB,EAAqCR,eAArC,CAAhB;AACH;AACD,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport UserActionType from './user.types';\r\nimport {auth, googleProvider , dateUtilizator} from '../../firebase/firebase.utils'\r\nimport { signInSucces, signInFailure} from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n    const userRef = yield call(dateUtilizator, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSucces({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n} catch(error){\r\n    yield put(signInFailure(error));\r\n}\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n      const { user } = yield auth.signInWithPopup(googleProvider);\r\n      yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n  \r\n  export function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n      yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}