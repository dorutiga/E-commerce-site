{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCJlSUyxzH0Ms9pahwkmUYIo54SZJDgR-k\",\n  authDomain: \"ecommercedb-2a4e1.firebaseapp.com\",\n  projectId: \"ecommercedb-2a4e1\",\n  storageBucket: \"ecommercedb-2a4e1.appspot.com\",\n  messagingSenderId: \"763283060175\",\n  appId: \"1:763283060175:web:67786c29647c58c5f40eba\",\n  measurementId: \"G-7S7GY4Y85X\"\n}; //verificam daca utilizatorul se afla in baza noastra de date\n\nexport const createUserProfileDocument = async (userAuth, aditionalData) => {\n  if (!userAuth) return;\n  const cerere = firestore.doc(`${userAuth.uid}`);\n  const raspuns = await cerere.get(); //se verifica daca utilizatorul exista in baza de date, iar daca nu exista se vor adauga date\n\n  if (!raspuns.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const creatLa = new Date();\n\n    try {\n      await cerere.set({\n        displayName,\n        email,\n        creatLa,\n        ...aditionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // creaza un serviciu de autentificare Google\n\nconst provider = new firebase.auth.GoogleAuthProvider(); //pop-up cu fereastra noua pentru google de selectare a contului\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","aditionalData","cerere","firestore","doc","uid","raspuns","get","exists","displayName","email","creatLa","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,mCAFD;AAGXC,EAAAA,SAAS,EAAE,mBAHA;AAIXC,EAAAA,aAAa,EAAE,+BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf,C,CAWE;;AAEA,OAAO,MAAMC,yBAAyB,GAAI,OAAMC,QAAN,EAAgBC,aAAhB,KAAkC;AAE1E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,MAAM,GAAEC,SAAS,CAACC,GAAV,CAAe,GAAEJ,QAAQ,CAACK,GAAI,EAA9B,CAAd;AAEA,QAAMC,OAAO,GAAG,MAAMJ,MAAM,CAACK,GAAP,EAAtB,CAN0E,CAO9E;;AACE,MAAG,CAACD,OAAO,CAACE,MAAZ,EAAmB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAgBC,MAAAA;AAAhB,QAAwBV,QAA9B;AACC,UAAMW,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AAEF,QAAI;AACF,YAAMV,MAAM,CAACW,GAAP,CAAW;AACfJ,QAAAA,WADe;AAEfC,QAAAA,KAFe;AAGfC,QAAAA,OAHe;AAIf,WAAGV;AAJY,OAAX,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACD;AACF;AAEE,CAxBI;AA0BP3B,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAI7B,QAAQ,CAAC6B,IAAT,EAAd;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB,C,CACT;;AACE,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,C,CAEA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCJlSUyxzH0Ms9pahwkmUYIo54SZJDgR-k\",\r\n    authDomain: \"ecommercedb-2a4e1.firebaseapp.com\",\r\n    projectId: \"ecommercedb-2a4e1\",\r\n    storageBucket: \"ecommercedb-2a4e1.appspot.com\",\r\n    messagingSenderId: \"763283060175\",\r\n    appId: \"1:763283060175:web:67786c29647c58c5f40eba\",\r\n    measurementId: \"G-7S7GY4Y85X\"\r\n  };\r\n\r\n\r\n  //verificam daca utilizatorul se afla in baza noastra de date\r\n\r\n  export const createUserProfileDocument =  async(userAuth, aditionalData) => {\r\n\r\n    if(!userAuth) return;\r\n\r\n    const cerere =firestore.doc(`${userAuth.uid}`);\r\n\r\n    const raspuns = await cerere.get();\r\n//se verifica daca utilizatorul exista in baza de date, iar daca nu exista se vor adauga date\r\n  if(!raspuns.exists){\r\n     const { displayName , email} =userAuth;\r\n      const creatLa = new Date();\r\n    \r\n    try {\r\n      await cerere.set({\r\n        displayName,\r\n        email,\r\n        creatLa,\r\n        ...aditionalData\r\n      })\r\n    } catch (error){\r\n      console.log(\"error creating user\",error.message);\r\n    }\r\n  }\r\n     \r\n    }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth  = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n// creaza un serviciu de autentificare Google\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  //pop-up cu fereastra noua pentru google de selectare a contului\r\n  provider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\n\r\n  export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}