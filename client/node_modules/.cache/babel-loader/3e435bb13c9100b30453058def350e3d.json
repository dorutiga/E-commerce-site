{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionType from './user.types';\nimport { auth, googleProvider, dateUtilizator, getUtilizatorCurent } from '../../firebase/firebase.utils';\nimport { signInSucces, signInFailure, signOutSuccess, signOutFailure, signOutStart } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(dateUtilizator, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSucces({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAtuhenticated() {\n  try {\n    const userAuth = yield getUtilizatorCurent();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionType.CHECK_USER_SESSION, isUserAtuhenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionType.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAtuhenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionType","auth","googleProvider","dateUtilizator","getUtilizatorCurent","signInSucces","signInFailure","signOutSuccess","signOutFailure","signOutStart","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAtuhenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signOut","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport UserActionType from './user.types';\r\nimport {auth, googleProvider , dateUtilizator, getUtilizatorCurent} from '../../firebase/firebase.utils'\r\nimport { signInSucces, signInFailure, signOutSuccess, signOutFailure, signOutStart} from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n    const userRef = yield call(dateUtilizator, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSucces({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n} catch(error){\r\n    yield put(signInFailure(error));\r\n}\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n      const { user } = yield auth.signInWithPopup(googleProvider);\r\n      yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n  \r\n  export function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n      yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n  export function* isUserAtuhenticated(){\r\n    try{\r\n        const userAuth = yield getUtilizatorCurent();\r\n        if(!userAuth) return ;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n  }\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n      yield auth.signOut();\r\n      yield put(signOutSuccess());\r\n    } catch (error) {\r\n      yield put(signOutFailure(error));\r\n    }\r\n  }\r\n  \r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionType.CHECK_USER_SESSION,isUserAtuhenticated )\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionType.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n         call(onGoogleSignInStart),\r\n         call(onEmailSignInStart), \r\n         call(isUserAtuhenticated),\r\n         call(onSignOutStart)\r\n        ])\r\n}"]},"metadata":{},"sourceType":"module"}