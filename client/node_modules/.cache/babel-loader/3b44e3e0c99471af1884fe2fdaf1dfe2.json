{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart; //it gets the hole state and return just a piece of it\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCart], cartItems.reduce((accumulatedPrice, cartItems) => accumulatedPrice + cartItems.price, 0));","map":{"version":3,"sources":["C:/Users/Dorut Iuga/Desktop/REACT/e-commerce/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","accumulatedPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAAwC;;;AAExC,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAKA,IAAI,CAACE,SAF2B,CAAtC;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE9CE,IAAI,IAAIA,IAAI,CAACI,MAFiC,CAAvC;AAIP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACPA,SAAS,CAACI,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CAH4C,CAA3C;AAWL,OAAO,MAAMC,eAAe,GAAEb,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CI,SAAS,CAACI,MAAV,CACE,CAACK,gBAAD,EAAmBT,SAAnB,KAAgCS,gBAAgB,GAAGT,SAAS,CAACU,KAD/D,EAEE,CAFF,CAF0C,CAArC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectCart = state => state.cart; //it gets the hole state and return just a piece of it\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCart],\r\n    cart  => cart.cartItems\r\n);\r\nexport const selectCartHidden = createSelector(\r\n[selectCart],\r\ncart => cart.hidden\r\n)\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems],\r\n    cartItems =>\r\n      cartItems.reduce(\r\n        (accumalatedQuantity, cartItem) =>\r\n          accumalatedQuantity + cartItem.quantity,\r\n        0\r\n      )\r\n  );\r\n  \r\n\r\n  export const selectCartTotal =createSelector(\r\n    [selectCart],\r\n    cartItems.reduce(\r\n      (accumulatedPrice, cartItems)=> accumulatedPrice + cartItems.price,\r\n      0\r\n      \r\n      )\r\n  )"]},"metadata":{},"sourceType":"module"}